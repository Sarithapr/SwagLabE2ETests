{
  "stats": {
    "suites": 9,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-24T21:36:50.154Z",
    "end": "2025-08-24T21:39:11.765Z",
    "duration": 141611
  },
  "results": [
    {
      "uuid": "85c68a2c-6bce-402a-915d-4b7d74b102f6",
      "title": "",
      "fullFile": "cypress/e2e/1_LoginPage.cy.js",
      "file": "cypress/e2e/1_LoginPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "08c751cb-bd0b-426d-bdaa-e3865187457e",
          "title": "Login page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check invalid login conditions",
              "fullTitle": "Login page tests should check invalid login conditions",
              "timedOut": null,
              "duration": 2475,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@usersList').then(userdetails => {\n  // cy.get('form').within(($form) => {\n  for (let i = 0; i < 2; i++) {\n    cy.visit('/');\n    cy.get('#user-name').as('username');\n    cy.get('@username').should('be.visible').and('not.be.disabled');\n    cy.get('@username').clear().type(userdetails[i].username);\n    cy.get('#password').as('password');\n    cy.get('@password').should('be.visible').and('not.be.disabled').clear().type(userdetails[i].password);\n    cy.get('#login-button').as('loginBtn');\n    cy.get('@loginBtn').click();\n    cy.get('h3').should('be.visible').and('contain.text', userdetails[i].expected);\n  }\n});",
              "err": {},
              "uuid": "e7991d95-62cc-44e8-a75d-76ebd8a5120a",
              "parentUUID": "08c751cb-bd0b-426d-bdaa-e3865187457e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check valid login conditions",
              "fullTitle": "Login page tests should check valid login conditions",
              "timedOut": null,
              "duration": 11685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@usersList').then(userdetails => {\n  for (let i = 2; i < userdetails.length; i++) {\n    cy.visit('/');\n    cy.get('#user-name').should('be.visible').clear().type(userdetails[i].username);\n    cy.get('#password').should('be.visible').clear().type(userdetails[i].password);\n    cy.get('#login-button').click();\n    cy.url().should('include', '/inventory.html');\n    cy.get('.inventory_list').should('be.visible');\n    cy.get('#react-burger-menu-btn').should('be.visible').click();\n    cy.get('#logout_sidebar_link').should('be.visible').click();\n  }\n});",
              "err": {},
              "uuid": "9b6cb442-5ae3-43af-9d64-bd95e559f4d0",
              "parentUUID": "08c751cb-bd0b-426d-bdaa-e3865187457e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7991d95-62cc-44e8-a75d-76ebd8a5120a",
            "9b6cb442-5ae3-43af-9d64-bd95e559f4d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3ef0dc00-96ba-4369-85ca-a271eb96437c",
      "title": "",
      "fullFile": "cypress/e2e/2_CartPage.cy.js",
      "file": "cypress/e2e/2_CartPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3eddb96-412a-4265-8423-2c6c7032fcfa",
          "title": "Cart Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add all items in the cart",
              "fullTitle": "Cart Page tests should add all items in the cart",
              "timedOut": null,
              "duration": 2441,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '6');\n//clicking cart\ncy.getSelector('shopping-cart-badge').click();\ncy.url().should('include', '/cart.html');\ncy.get('.cart_item .cart_quantity').each($el => {\n  cy.wrap($el).should('have.text', '1');\n});\ncy.get(\".cart_item\").find('button').eq(0).as(\"removeBackpack\");\ncy.get(\"@removeBackpack\").should('have.text', 'Remove');\ncy.get(\"@removeBackpack\").click();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '5');\n//remove all items from the cart\ncy.get(\".cart_item\").find('button').each($el => {\n  cy.wrap($el).click();\n});\ncy.contains('Remove').should('not.exist');\ncy.getSelector('continue-shopping').click();\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "958324db-768c-4145-aac2-1c075bb8a37d",
              "parentUUID": "a3eddb96-412a-4265-8423-2c6c7032fcfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "958324db-768c-4145-aac2-1c075bb8a37d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2441,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a41eecf6-9f42-4d79-a22b-5da0d453d1bd",
      "title": "",
      "fullFile": "cypress/e2e/3_CheckoutPage.cy.js",
      "file": "cypress/e2e/3_CheckoutPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd74b113-fa80-423e-ae6b-b1787abe22e9",
          "title": "Checkout Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add all items in the cart",
              "fullTitle": "Checkout Page tests should add all items in the cart",
              "timedOut": null,
              "duration": 3075,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.getSelector('shopping-cart-badge').click();\ncy.get('#checkout').click();\ncy.url().should('include', '/checkout-step-one.html');\ncy.getSelector('secondary-header').should('have.text', 'Checkout: Your Information');\ncy.get('#first-name').clear().type('Rahul');\ncy.get('#last-name').clear().type('Haridas');\ncy.getSelector('postalCode').clear().type('10245');\ncy.get('#continue').click();\ncy.url().should('include', '/checkout-step-two.html');\nfor (let i = 0; i < 5; i++) {\n  cy.get('.summary_info').children().eq(i).invoke('text').then(text => {\n    expect(text.trim()).to.equal(checkoutDetails[i]);\n  });\n}\n//to get itemtotal price\ncy.getSelector('inventory-item-price').then($text => {\n  console.log($text);\n  console.log(typeof $text);\n  console.log($text.innerText); //return undefined\n  console.log($text.text()); //concatenation fof all price as string with dollar sign\n  const itemsArr = Cypress._.map($text, el => parseFloat(el.innerText.replace('$', '').trim()));\n  console.log(itemsArr);\n  const itemTotal = Cypress._.sum(itemsArr);\n  console.log(itemTotal);\n  cy.get('.summary_subtotal_label').should('have.text', `Item total: $${itemTotal.toFixed(2)}`);\n  cy.get('.summary_total_label').invoke('text').then($text => {\n    console.log($text);\n    console.log($text.innerText);\n    console.log(typeof $text);\n    console.log($text.text);\n    const cleanText = $text.replace(/[^\\d.]/g, '').trim();\n    console.log(cleanText);\n    const totalPrice = parseFloat(cleanText);\n    console.log(totalPrice);\n    expect(totalPrice).to.be.greaterThan(itemTotal);\n    cy.log(`Item total:$${itemTotal.toFixed(2)}, Total Price: ${totalPrice}`);\n  });\n  /*const newJSarr = [...text].map(el=>parseFloat(el.innerText.replace('$','').trim()))\n  console.log(newJSarr);\n  const sum = newJSarr.reduce((acc, curr) => acc + curr, 0)\n  console.log(sum);*/\n  //  text.each((i,el)=>{\n  //console.log(\"el.innerText\",el.innerText)\n  //console.log(parseFloat(el.innerText.replace('$','').trim()))\n  //var sum = 0;\n  //prices.push(el.innerText);\n  //Cypress._.map(text, (el) => {\n  // console.log(parseFloat(el.innerText.replace('$','').trim()))\n  //})\n  //console.log('All prices:', prices);\n  //console.log(el.text);\n  //console.log(parseFloat(el.text.trim().replace('$', '')));\n  //sum=sum+parseFloat(el.text.trim().replace('$', '')));\n  //console.log(el.text.trim());\n  //console.log(parseFloat(el.trim().replace('$', '')));\n  //sum=sum+parseFloat(el.trim().replace('$', ''));\n  //  })\n  // console.log(parseFloat(text.trim().replace('$', '')));\n});\ncy.url().should('include', '/checkout-step-two.html');\ncy.getSelector('finish').click();\ncy.url().should('include', '/checkout-complete.html');\ncy.getSelector('secondary-header').should('have.text', 'Checkout: Complete!');\ncy.get(\"h2.complete-header\").should('have.text', 'Thank you for your order!');\ncy.getSelector(\"back-to-products\").click();\ncy.url().should('include', '/inventory.html');\ncy.get(\"a.shopping_cart_link\").children('span').should('not.exist');",
              "err": {},
              "uuid": "dfecbcb4-f4af-4f38-86a1-1480fdac8d18",
              "parentUUID": "cd74b113-fa80-423e-ae6b-b1787abe22e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfecbcb4-f4af-4f38-86a1-1480fdac8d18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "95d7a582-a977-4a88-981d-75caf8b85f78",
      "title": "",
      "fullFile": "cypress/e2e/4_ProductsPage.cy.js",
      "file": "cypress/e2e/4_ProductsPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3178445c-0f13-40a0-b253-7c2311742836",
          "title": "Inventory Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load all menu items",
              "fullTitle": "Inventory Page tests should load all menu items",
              "timedOut": null,
              "duration": 1498,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#react-burger-menu-btn').click();\nsidebarLinks.forEach(link => {\n  cy.get(link.id).should('be.visible').and('have.text', link.text);\n  switch (link.text && link.text.trim() !== 'Logout') {\n    case \"All Items\":\n      cy.get(link.id).click();\n      cy.url().should('include', '/inventory.html');\n      break;\n    case \"About\":\n      cy.get(link.id).click();\n      cy.origin('https://saucelabs.com', () => {\n        cy.url().should('include', 'https://saucelabs.com/');\n        //cy.go('back');\n        // Optionally: Add more assertions or actions specific to the About page\n      });\n      cy.visit('/inventory.html');\n      break;\n    case \"Reset App State\":\n      cy.get(link.id).click();\n      cy.get(\"a.shopping_cart_link\").children('span').should('not.exist');\n      cy.url().should('include', '/inventory.html');\n      cy.get('#react-burger-cross-btn').click();\n      break;\n  }\n});\ncy.get('#inventory_sidebar_link').click();\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "1249e944-5f54-4eee-ad23-2540fb5ffa52",
              "parentUUID": "3178445c-0f13-40a0-b253-7c2311742836",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add and remove all inventory items",
              "fullTitle": "Inventory Page tests should add and remove all inventory items",
              "timedOut": null,
              "duration": 2004,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '6');\n// Remove all items from inventory page\ncy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link\").children('span').should('not.exist');\n// Go to cart and verify\ncy.get('.shopping_cart_link').click();\ncy.url().should('include', '/cart.html');\ncy.getSelector('secondary-header').should('have.text', 'Your Cart');\n// Optionally: Add logic to remove a single item from the cart if needed",
              "err": {},
              "uuid": "e5f271a8-6a9e-4e5d-b651-b7118f829d73",
              "parentUUID": "3178445c-0f13-40a0-b253-7c2311742836",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if the sorting is correct",
              "fullTitle": "Inventory Page tests should check if the sorting is correct",
              "timedOut": null,
              "duration": 1374,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.product_sort_container').select('za');\ngetItemNames().then(names => {\n  const sorted = [...names].sort((a, b) => b.localeCompare(a));\n  expect(names).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('az');\ngetItemNames().then(names => {\n  const sorted = [...names].sort((a, b) => a.localeCompare(b));\n  expect(names).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('lohi');\ngetItemPrices().then(prices => {\n  const sorted = [...prices].sort((a, b) => a - b);\n  expect(prices).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('hilo');\ngetItemPrices().then(prices => {\n  const sorted = [...prices].sort((a, b) => b - a);\n  expect(prices).to.deep.equal(sorted);\n});",
              "err": {},
              "uuid": "403cbf3e-1155-40d3-8398-d16731380713",
              "parentUUID": "3178445c-0f13-40a0-b253-7c2311742836",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if all items are displayed",
              "fullTitle": "Inventory Page tests should check if all items are displayed",
              "timedOut": null,
              "duration": 891,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.inventory_item').should('have.length', 6);\ncy.get('.inventory_item_name').each($el => {\n  expect($el.text().trim()).to.not.be.empty;\n});\ncy.get('.inventory_item_price').each($el => {\n  expect($el.text().trim()).to.match(/^\\$\\d+(\\.\\d{2})?$/);\n});",
              "err": {},
              "uuid": "4cab4019-2129-4317-905a-485934407e88",
              "parentUUID": "3178445c-0f13-40a0-b253-7c2311742836",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1249e944-5f54-4eee-ad23-2540fb5ffa52",
            "e5f271a8-6a9e-4e5d-b651-b7118f829d73",
            "403cbf3e-1155-40d3-8398-d16731380713",
            "4cab4019-2129-4317-905a-485934407e88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5767,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1f283e6-26d3-40af-a082-97452ef143ab",
      "title": "",
      "fullFile": "cypress/e2e/1_LoginPage.cy.js",
      "file": "cypress/e2e/1_LoginPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "008e70b3-1adc-47e4-8029-89773aea73ec",
          "title": "Login page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should check invalid login conditions",
              "fullTitle": "Login page tests should check invalid login conditions",
              "timedOut": null,
              "duration": 2508,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@usersList').then(userdetails => {\n  // cy.get('form').within(($form) => {\n  for (let i = 0; i < 2; i++) {\n    cy.visit('/');\n    cy.get('#user-name').as('username');\n    cy.get('@username').should('be.visible').and('not.be.disabled');\n    cy.get('@username').clear().type(userdetails[i].username);\n    cy.get('#password').as('password');\n    cy.get('@password').should('be.visible').and('not.be.disabled').clear().type(userdetails[i].password);\n    cy.get('#login-button').as('loginBtn');\n    cy.get('@loginBtn').click();\n    cy.get('h3').should('be.visible').and('contain.text', userdetails[i].expected);\n  }\n});",
              "err": {},
              "uuid": "24cd4fc4-f239-47e3-8db6-0d65e512c479",
              "parentUUID": "008e70b3-1adc-47e4-8029-89773aea73ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check valid login conditions",
              "fullTitle": "Login page tests should check valid login conditions",
              "timedOut": null,
              "duration": 11662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@usersList').then(userdetails => {\n  for (let i = 2; i < userdetails.length; i++) {\n    cy.visit('/');\n    cy.get('#user-name').should('be.visible').clear().type(userdetails[i].username);\n    cy.get('#password').should('be.visible').clear().type(userdetails[i].password);\n    cy.get('#login-button').click();\n    cy.url().should('include', '/inventory.html');\n    cy.get('.inventory_list').should('be.visible');\n    cy.get('#react-burger-menu-btn').should('be.visible').click();\n    cy.get('#logout_sidebar_link').should('be.visible').click();\n  }\n});",
              "err": {},
              "uuid": "c55ccbc8-4d0b-4ce7-97d6-dd7333242437",
              "parentUUID": "008e70b3-1adc-47e4-8029-89773aea73ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24cd4fc4-f239-47e3-8db6-0d65e512c479",
            "c55ccbc8-4d0b-4ce7-97d6-dd7333242437"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c3a5b83f-4eae-4fe4-8988-6495d49cdc30",
      "title": "",
      "fullFile": "cypress/e2e/2_CartPage.cy.js",
      "file": "cypress/e2e/2_CartPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c6c5d9a-db11-439e-9cab-173266b16344",
          "title": "Cart Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add all items in the cart",
              "fullTitle": "Cart Page tests should add all items in the cart",
              "timedOut": null,
              "duration": 2483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '6');\n//clicking cart\ncy.getSelector('shopping-cart-badge').click();\ncy.url().should('include', '/cart.html');\ncy.get('.cart_item .cart_quantity').each($el => {\n  cy.wrap($el).should('have.text', '1');\n});\ncy.get(\".cart_item\").find('button').eq(0).as(\"removeBackpack\");\ncy.get(\"@removeBackpack\").should('have.text', 'Remove');\ncy.get(\"@removeBackpack\").click();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '5');\n//remove all items from the cart\ncy.get(\".cart_item\").find('button').each($el => {\n  cy.wrap($el).click();\n});\ncy.contains('Remove').should('not.exist');\ncy.getSelector('continue-shopping').click();\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "51c716c3-713a-4fd2-b6ba-2d727c76e91b",
              "parentUUID": "2c6c5d9a-db11-439e-9cab-173266b16344",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51c716c3-713a-4fd2-b6ba-2d727c76e91b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "915bad8f-41a6-4604-ad87-f189a38d1f45",
      "title": "",
      "fullFile": "cypress/e2e/3_CheckoutPage.cy.js",
      "file": "cypress/e2e/3_CheckoutPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eea2f711-45cb-4b33-a971-543064fee1a7",
          "title": "Checkout Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add all items in the cart",
              "fullTitle": "Checkout Page tests should add all items in the cart",
              "timedOut": null,
              "duration": 3117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.getSelector('shopping-cart-badge').click();\ncy.get('#checkout').click();\ncy.url().should('include', '/checkout-step-one.html');\ncy.getSelector('secondary-header').should('have.text', 'Checkout: Your Information');\ncy.get('#first-name').clear().type('Rahul');\ncy.get('#last-name').clear().type('Haridas');\ncy.getSelector('postalCode').clear().type('10245');\ncy.get('#continue').click();\ncy.url().should('include', '/checkout-step-two.html');\nfor (let i = 0; i < 5; i++) {\n  cy.get('.summary_info').children().eq(i).invoke('text').then(text => {\n    expect(text.trim()).to.equal(checkoutDetails[i]);\n  });\n}\n//to get itemtotal price\ncy.getSelector('inventory-item-price').then($text => {\n  console.log($text);\n  console.log(typeof $text);\n  console.log($text.innerText); //return undefined\n  console.log($text.text()); //concatenation fof all price as string with dollar sign\n  const itemsArr = Cypress._.map($text, el => parseFloat(el.innerText.replace('$', '').trim()));\n  console.log(itemsArr);\n  const itemTotal = Cypress._.sum(itemsArr);\n  console.log(itemTotal);\n  cy.get('.summary_subtotal_label').should('have.text', `Item total: $${itemTotal.toFixed(2)}`);\n  cy.get('.summary_total_label').invoke('text').then($text => {\n    console.log($text);\n    console.log($text.innerText);\n    console.log(typeof $text);\n    console.log($text.text);\n    const cleanText = $text.replace(/[^\\d.]/g, '').trim();\n    console.log(cleanText);\n    const totalPrice = parseFloat(cleanText);\n    console.log(totalPrice);\n    expect(totalPrice).to.be.greaterThan(itemTotal);\n    cy.log(`Item total:$${itemTotal.toFixed(2)}, Total Price: ${totalPrice}`);\n  });\n  /*const newJSarr = [...text].map(el=>parseFloat(el.innerText.replace('$','').trim()))\n  console.log(newJSarr);\n  const sum = newJSarr.reduce((acc, curr) => acc + curr, 0)\n  console.log(sum);*/\n  //  text.each((i,el)=>{\n  //console.log(\"el.innerText\",el.innerText)\n  //console.log(parseFloat(el.innerText.replace('$','').trim()))\n  //var sum = 0;\n  //prices.push(el.innerText);\n  //Cypress._.map(text, (el) => {\n  // console.log(parseFloat(el.innerText.replace('$','').trim()))\n  //})\n  //console.log('All prices:', prices);\n  //console.log(el.text);\n  //console.log(parseFloat(el.text.trim().replace('$', '')));\n  //sum=sum+parseFloat(el.text.trim().replace('$', '')));\n  //console.log(el.text.trim());\n  //console.log(parseFloat(el.trim().replace('$', '')));\n  //sum=sum+parseFloat(el.trim().replace('$', ''));\n  //  })\n  // console.log(parseFloat(text.trim().replace('$', '')));\n});\ncy.url().should('include', '/checkout-step-two.html');\ncy.getSelector('finish').click();\ncy.url().should('include', '/checkout-complete.html');\ncy.getSelector('secondary-header').should('have.text', 'Checkout: Complete!');\ncy.get(\"h2.complete-header\").should('have.text', 'Thank you for your order!');\ncy.getSelector(\"back-to-products\").click();\ncy.url().should('include', '/inventory.html');\ncy.get(\"a.shopping_cart_link\").children('span').should('not.exist');",
              "err": {},
              "uuid": "178e87f5-2493-4ff4-a7df-74e009c46c85",
              "parentUUID": "eea2f711-45cb-4b33-a971-543064fee1a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "178e87f5-2493-4ff4-a7df-74e009c46c85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7d09bc47-8887-4c89-90bc-7dcd4f0b3cca",
      "title": "",
      "fullFile": "cypress/e2e/4_ProductsPage.cy.js",
      "file": "cypress/e2e/4_ProductsPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "829309ec-0cdf-4f57-92cb-de737d08ac75",
          "title": "Inventory Page tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should load all menu items",
              "fullTitle": "Inventory Page tests should load all menu items",
              "timedOut": null,
              "duration": 1578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#react-burger-menu-btn').click();\nsidebarLinks.forEach(link => {\n  cy.get(link.id).should('be.visible').and('have.text', link.text);\n  switch (link.text && link.text.trim() !== 'Logout') {\n    case \"All Items\":\n      cy.get(link.id).click();\n      cy.url().should('include', '/inventory.html');\n      break;\n    case \"About\":\n      cy.get(link.id).click();\n      cy.origin('https://saucelabs.com', () => {\n        cy.url().should('include', 'https://saucelabs.com/');\n        //cy.go('back');\n        // Optionally: Add more assertions or actions specific to the About page\n      });\n      cy.visit('/inventory.html');\n      break;\n    case \"Reset App State\":\n      cy.get(link.id).click();\n      cy.get(\"a.shopping_cart_link\").children('span').should('not.exist');\n      cy.url().should('include', '/inventory.html');\n      cy.get('#react-burger-cross-btn').click();\n      break;\n  }\n});\ncy.get('#inventory_sidebar_link').click();\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "601544af-fbae-4633-bc17-dd7f81f9d630",
              "parentUUID": "829309ec-0cdf-4f57-92cb-de737d08ac75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add and remove all inventory items",
              "fullTitle": "Inventory Page tests should add and remove all inventory items",
              "timedOut": null,
              "duration": 1935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link>span\").should('have.text', '6');\n// Remove all items from inventory page\ncy.inventoryitemsaddremove();\ncy.get(\"a.shopping_cart_link\").children('span').should('not.exist');\n// Go to cart and verify\ncy.get('.shopping_cart_link').click();\ncy.url().should('include', '/cart.html');\ncy.getSelector('secondary-header').should('have.text', 'Your Cart');\n// Optionally: Add logic to remove a single item from the cart if needed",
              "err": {},
              "uuid": "e6e9d951-a98e-4bc0-bbe9-54f6e0c8c027",
              "parentUUID": "829309ec-0cdf-4f57-92cb-de737d08ac75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if the sorting is correct",
              "fullTitle": "Inventory Page tests should check if the sorting is correct",
              "timedOut": null,
              "duration": 1380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.product_sort_container').select('za');\ngetItemNames().then(names => {\n  const sorted = [...names].sort((a, b) => b.localeCompare(a));\n  expect(names).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('az');\ngetItemNames().then(names => {\n  const sorted = [...names].sort((a, b) => a.localeCompare(b));\n  expect(names).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('lohi');\ngetItemPrices().then(prices => {\n  const sorted = [...prices].sort((a, b) => a - b);\n  expect(prices).to.deep.equal(sorted);\n});\ncy.get('.product_sort_container').select('hilo');\ngetItemPrices().then(prices => {\n  const sorted = [...prices].sort((a, b) => b - a);\n  expect(prices).to.deep.equal(sorted);\n});",
              "err": {},
              "uuid": "589d2eb0-699f-4982-b457-f5ddf726cd65",
              "parentUUID": "829309ec-0cdf-4f57-92cb-de737d08ac75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check if all items are displayed",
              "fullTitle": "Inventory Page tests should check if all items are displayed",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.inventory_item').should('have.length', 6);\ncy.get('.inventory_item_name').each($el => {\n  expect($el.text().trim()).to.not.be.empty;\n});\ncy.get('.inventory_item_price').each($el => {\n  expect($el.text().trim()).to.match(/^\\$\\d+(\\.\\d{2})?$/);\n});",
              "err": {},
              "uuid": "79f9051b-6d06-41cc-9fa6-74ac2b0e277c",
              "parentUUID": "829309ec-0cdf-4f57-92cb-de737d08ac75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "601544af-fbae-4633-bc17-dd7f81f9d630",
            "e6e9d951-a98e-4bc0-bbe9-54f6e0c8c027",
            "589d2eb0-699f-4982-b457-f5ddf726cd65",
            "79f9051b-6d06-41cc-9fa6-74ac2b0e277c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d5f6c22-9f3a-4565-b5ec-c98a1c1b9510",
      "title": "",
      "fullFile": "cypress/e2e/LoginTests.cy.js",
      "file": "cypress/e2e/LoginTests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86728807-f0d0-4a42-b35e-cc4fc0f394c9",
          "title": "Login Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login with valid credentials",
              "fullTitle": "Login Tests should login with valid credentials",
              "timedOut": null,
              "duration": 1023,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.get('#user-name').type('standard_user');\ncy.get('#password').type('secret_sauce');\ncy.getSelector('login-button').click();\ncy.url().should('include', '/inventory.html');",
              "err": {},
              "uuid": "635697fb-ebcb-4d56-8a50-07cbef164f3c",
              "parentUUID": "86728807-f0d0-4a42-b35e-cc4fc0f394c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error with invalid credentials",
              "fullTitle": "Login Tests should show error with invalid credentials",
              "timedOut": null,
              "duration": 840,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.get('#user-name').type('invalid_user');\ncy.get('#password').type('wrong_password');\ncy.getSelector('login-button').click();\ncy.get('[data-test=\"error\"]').should('be.visible');",
              "err": {},
              "uuid": "477c9ee7-2b0b-4b19-8456-78f5f4752963",
              "parentUUID": "86728807-f0d0-4a42-b35e-cc4fc0f394c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error with empty fields",
              "fullTitle": "Login Tests should show error with empty fields",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.getSelector('login-button').click();\ncy.get('[data-test=\"error\"]').should('contain.text', 'Username is required');",
              "err": {},
              "uuid": "40af3aa5-b0b7-4c34-801c-c87e356bc157",
              "parentUUID": "86728807-f0d0-4a42-b35e-cc4fc0f394c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "635697fb-ebcb-4d56-8a50-07cbef164f3c",
            "477c9ee7-2b0b-4b19-8456-78f5f4752963",
            "40af3aa5-b0b7-4c34-801c-c87e356bc157"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2004,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "setupNodeEvents": "[Function setupNodeEvents]"
      },
      "version": "6.2.0"
    }
  }
}